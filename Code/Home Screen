//
//  ContentView.swift
//  Resume of Web
//
//  Created by Yang Chen on 2022/11/1.
//

import SwiftUI

struct ContentView: View {
    let me = Resume.shared
    @State var isShowingContact = false //把isShowingContact變數拉出來做狀態管理（可定義修改）
    
    var body: some View {
        ScrollView {
            
            VStack (spacing:20) {
                
                HStack {
                    
                    Image("Avatar")
                        .resizable().aspectRatio(contentMode: .fit)
                        .clipShape(Circle())
                        .padding()
                        .frame(width: 200)
                    
                    VStack (spacing: 20) {
                        Text(me.name)
                            .font(.title3).bold()
                        Text(me.title)
                            .font(.title3)
                        Label(me.location, systemImage:
                                "location.fill").foregroundColor(.secondary)
                    }
                }
                //me.bio also available cuz i done using bio in Share (Structure)
                
                Text(me [keyPath: \.bio])
                    .font(.title3).frame(width:360)
                
                Button {
                    isShowingContact = true
                } label: {
                    Text("Start Learning")
                        .foregroundColor(.white)
                        .font(.title2.bold())
                        .padding(.vertical, 10)
                        .frame(maxWidth: .infinity)
                        .background(RoundedRectangle(cornerRadius: 100).foregroundColor(.brown).frame(width: 370))
                }
                
                Text("Lectures")
                    .font(.title2).bold()
                    .frame(maxWidth: .infinity, alignment: .leading)
                //  .frame(width: 370, alignment: .leading)
                
                //let skill = me.skills.first!
                //如果單純只傳一張圖上來，可用建變數的方式回傳，然後直接HStack包住4個複製的Image達到效果
                //或者用ForEach in + keypath的方式讓他loop ＋ 從Constant裡的Resume回傳值
                HStack (spacing: 25) {
                    Group{
                        Link (destination: .init(string:
                                                    "https://classroom.google.com/c/NDQ2Njg5NzY3MzEz?cjc=5e54kw3")!
                        ){
                            Group{
                                VStack {
                                    Image("臺北")
                                        .resizable().aspectRatio(contentMode: .fit)
                                        .frame(width: 50)
                                    Text("臺北")
                                        .foregroundColor(.black)
                                        .bold()
                                }
                            }
                        }
                        
                        Link (destination: .init(string:
                                                    "https://classroom.google.com/c/NTA3NzI4MTc2NDc1?cjc=zfom3c7")!) {
                            Group{
                                VStack {
                                    Image("臺中")
                                        .resizable().aspectRatio(contentMode: .fit)
                                        .frame(width: 50)
                                    Text("臺中")
                                        .foregroundColor(.black)
                                        .bold()
                                }
                            }
                        }
                        
                        Link (destination: .init(string:
                                                    "https://classroom.google.com/c/NTczNTkzMzk4ODk5?cjc=hw7desx")!) {
                            Group{
                                VStack {
                                    Image("臺南")
                                        .resizable().aspectRatio(contentMode: .fit)
                                        .frame(width: 50)
                                    Text("臺南")
                                        .foregroundColor(.black)
                                        .bold()
                                }
                            }
                        }
                        
                        Link (destination: .init(string:
                                                    "https://classroom.google.com/c/NTczNTkyNjAzNDQ5?cjc=udcv3at")!) {
                            Group{
                                VStack {
                                    Image("高雄")
                                        .resizable().aspectRatio(contentMode: .fit)
                                        .frame(width: 50)
                                    Text("高雄")
                                        .foregroundColor(.black)
                                        .bold()
                                }
                            }
                        }
                        
                        Link (destination: .init(string:
                                                    "https://classroom.google.com/c/NTczNTg5MTU5MjEw?cjc=rqlcr2s")!) {
                            Group{
                                VStack {
                                    Image("宜蘭")
                                        .resizable().aspectRatio(contentMode: .fit)
                                        .frame(width: 50)
                                    Text("宜蘭")
                                        .foregroundColor(.black)
                                        .bold()
                                }
                            }
                        }
                    }
                }
                
                Text("Exprience")
                    .font(.title2).bold()
                    .frame(maxWidth: .infinity, alignment: .leading)
                //  .frame(width: 370, alignment: .leading)
                //experiences 在Constant裡是用tuple屬性，裡面是string無法hashable，沒辦法像上面用id: \.self (因為這裡需要使用hashable的資料)
                //因此，我是用\.title作為id，因為我有先令它為string（"Hashable"）
            
                VStack (spacing: 0){
                    
                    ForEach(me.experiences.indices, id: \.self) {  index  in
                        
                        HStack {
                            LineShape(dotSize: 10,
                                      lineWidth: 2,
                                      style : index == 0 ? .bottomHalf : index ==
                                      me.experiences.count - 1 ? .topHalf : .full  )
                            .frame(width: 70)
                            .foregroundColor(.secondary)
                            
                            let exp = me.experiences[index]
                            
                            VStack {
                                Group {
                                    Text("\(exp.start) - \(exp.end)").foregroundColor(.secondary)
                                    Text(exp.title).bold()
                                    Text(exp.company).padding(.bottom, 15)  //只對company資料做底部的padding
                                    
                                }.frame(maxWidth: .infinity, alignment: .leading)
                                
                                //.frame(maxWidth: .infinity, alignment: .leading)
                                //我用Group把裡面的三種資料包起來再上寬度和對齊modifier
                            }
                        }
                    }
                }
                
            }.padding()
                .overlay(Color.black.opacity(isShowingContact ? 0.5 : 0)
                    .onTapGesture { isShowingContact = false }
                )
                .overlay(alignment: .top) {
                    Group {
                        if (isShowingContact) {
                            ContactView(isShowing: $isShowingContact)
                                .offset(y: UIScreen.main.bounds.maxY * 0.29)
                                .transition(.opacity)
                            
                        }
                    }
                }
            
            .animation(.spring(), value: isShowingContact)
         }.background(Color(uiColor: .secondarySystemBackground))
        //把整個背景調成米白(off-white) in order to emphasize ContactView
        
        
      }
  }

    
    
    struct ContentView_Previews: PreviewProvider {
        static var previews: some View {
            ContentView()
        }
    }
